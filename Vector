import math
class Vector:
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z
        self.module = math.sqrt(x ** 2 + y ** 2 + z ** 2)

    def __add__(self, other):
        return Vector(self.x + other.x, self.y + other.y, self.z + other.z)

    def __sub__(self, other):
        return Vector(self.x - other.x, self.y - other.y, self.z - other.z)
    
    def __mul__(self, other):
        if isinstance(other, Vector) == True:
            return (self.x * other.x + self.y * other.y + self.z * other.z)
        else:
            return Vector(self.x * other, self.y * other, self.z * other)

    def __rmul__(self, other):
        if isinstance(other, Vector) == True:
            return (self.x * other.x + self.y * other.y + self.z * other.z)
        else:
            return Vector(self.x * other, self.y * other, self.z * other)
    
    def __abs__(self):
        return (math.sqrt(self.x ** 2 + self.y ** 2 + self.z ** 2))
    
